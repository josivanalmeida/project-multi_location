//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Multi_LocationsWin
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Multi_LocationsEntities : DbContext
    {
        public Multi_LocationsEntities()
            : base("name=Multi_LocationsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Audits> Audits { get; set; }
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<Couleurs> Couleurs { get; set; }
        public virtual DbSet<Locations> Locations { get; set; }
        public virtual DbSet<Modeles> Modeles { get; set; }
        public virtual DbSet<Paiement> Paiement { get; set; }
        public virtual DbSet<Termes_Location> Termes_Location { get; set; }
        public virtual DbSet<Types> Types { get; set; }
        public virtual DbSet<Vehicules> Vehicules { get; set; }
        public virtual DbSet<View_Location> View_Location { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int Annuler_Paiement(Nullable<int> idPaiement, string raisonAnnulation)
        {
            var idPaiementParameter = idPaiement.HasValue ?
                new ObjectParameter("idPaiement", idPaiement) :
                new ObjectParameter("idPaiement", typeof(int));
    
            var raisonAnnulationParameter = raisonAnnulation != null ?
                new ObjectParameter("raisonAnnulation", raisonAnnulation) :
                new ObjectParameter("raisonAnnulation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Annuler_Paiement", idPaiementParameter, raisonAnnulationParameter);
        }
    
        public virtual int Insertion_Location(Nullable<System.DateTime> datePaiement, Nullable<decimal> montantMensuel, Nullable<int> nombrePaiment, Nullable<int> idVehicule, Nullable<int> idClient, Nullable<int> idTerme, Nullable<decimal> kmInitial, Nullable<decimal> kmFinal)
        {
            var datePaiementParameter = datePaiement.HasValue ?
                new ObjectParameter("datePaiement", datePaiement) :
                new ObjectParameter("datePaiement", typeof(System.DateTime));
    
            var montantMensuelParameter = montantMensuel.HasValue ?
                new ObjectParameter("montantMensuel", montantMensuel) :
                new ObjectParameter("montantMensuel", typeof(decimal));
    
            var nombrePaimentParameter = nombrePaiment.HasValue ?
                new ObjectParameter("nombrePaiment", nombrePaiment) :
                new ObjectParameter("nombrePaiment", typeof(int));
    
            var idVehiculeParameter = idVehicule.HasValue ?
                new ObjectParameter("idVehicule", idVehicule) :
                new ObjectParameter("idVehicule", typeof(int));
    
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("idClient", idClient) :
                new ObjectParameter("idClient", typeof(int));
    
            var idTermeParameter = idTerme.HasValue ?
                new ObjectParameter("idTerme", idTerme) :
                new ObjectParameter("idTerme", typeof(int));
    
            var kmInitialParameter = kmInitial.HasValue ?
                new ObjectParameter("kmInitial", kmInitial) :
                new ObjectParameter("kmInitial", typeof(decimal));
    
            var kmFinalParameter = kmFinal.HasValue ?
                new ObjectParameter("kmFinal", kmFinal) :
                new ObjectParameter("kmFinal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertion_Location", datePaiementParameter, montantMensuelParameter, nombrePaimentParameter, idVehiculeParameter, idClientParameter, idTermeParameter, kmInitialParameter, kmFinalParameter);
        }
    
        public virtual int Insertion_Paiement(Nullable<System.DateTime> datePaiement, Nullable<decimal> montant, Nullable<int> idLocation, string raisonAnnulation)
        {
            var datePaiementParameter = datePaiement.HasValue ?
                new ObjectParameter("datePaiement", datePaiement) :
                new ObjectParameter("datePaiement", typeof(System.DateTime));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            var idLocationParameter = idLocation.HasValue ?
                new ObjectParameter("idLocation", idLocation) :
                new ObjectParameter("idLocation", typeof(int));
    
            var raisonAnnulationParameter = raisonAnnulation != null ?
                new ObjectParameter("raisonAnnulation", raisonAnnulation) :
                new ObjectParameter("raisonAnnulation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertion_Paiement", datePaiementParameter, montantParameter, idLocationParameter, raisonAnnulationParameter);
        }
    
        public virtual int MiseAJour_Location(Nullable<int> idLocation, Nullable<System.DateTime> dateLocation, Nullable<System.DateTime> datePaiement, Nullable<decimal> montantMensuel, Nullable<int> nombrePaiment, Nullable<int> idVehicule, Nullable<int> idClient, Nullable<int> idTerme, Nullable<decimal> kmInitial, Nullable<decimal> kmFinal)
        {
            var idLocationParameter = idLocation.HasValue ?
                new ObjectParameter("idLocation", idLocation) :
                new ObjectParameter("idLocation", typeof(int));
    
            var dateLocationParameter = dateLocation.HasValue ?
                new ObjectParameter("dateLocation", dateLocation) :
                new ObjectParameter("dateLocation", typeof(System.DateTime));
    
            var datePaiementParameter = datePaiement.HasValue ?
                new ObjectParameter("datePaiement", datePaiement) :
                new ObjectParameter("datePaiement", typeof(System.DateTime));
    
            var montantMensuelParameter = montantMensuel.HasValue ?
                new ObjectParameter("montantMensuel", montantMensuel) :
                new ObjectParameter("montantMensuel", typeof(decimal));
    
            var nombrePaimentParameter = nombrePaiment.HasValue ?
                new ObjectParameter("nombrePaiment", nombrePaiment) :
                new ObjectParameter("nombrePaiment", typeof(int));
    
            var idVehiculeParameter = idVehicule.HasValue ?
                new ObjectParameter("idVehicule", idVehicule) :
                new ObjectParameter("idVehicule", typeof(int));
    
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("idClient", idClient) :
                new ObjectParameter("idClient", typeof(int));
    
            var idTermeParameter = idTerme.HasValue ?
                new ObjectParameter("idTerme", idTerme) :
                new ObjectParameter("idTerme", typeof(int));
    
            var kmInitialParameter = kmInitial.HasValue ?
                new ObjectParameter("kmInitial", kmInitial) :
                new ObjectParameter("kmInitial", typeof(decimal));
    
            var kmFinalParameter = kmFinal.HasValue ?
                new ObjectParameter("kmFinal", kmFinal) :
                new ObjectParameter("kmFinal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MiseAJour_Location", idLocationParameter, dateLocationParameter, datePaiementParameter, montantMensuelParameter, nombrePaimentParameter, idVehiculeParameter, idClientParameter, idTermeParameter, kmInitialParameter, kmFinalParameter);
        }
    
        public virtual ObjectResult<Selection_Location_Result> Selection_Location(Nullable<int> idLocation)
        {
            var idLocationParameter = idLocation.HasValue ?
                new ObjectParameter("idLocation", idLocation) :
                new ObjectParameter("idLocation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Selection_Location_Result>("Selection_Location", idLocationParameter);
        }
    
        public virtual int Supprimer_Client(Nullable<int> idClient)
        {
            var idClientParameter = idClient.HasValue ?
                new ObjectParameter("idClient", idClient) :
                new ObjectParameter("idClient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Supprimer_Client", idClientParameter);
        }
    }
}
